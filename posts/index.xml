<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Sir</title>
        <link>https://www.leewei.co/posts/</link>
        <description>All Posts | Sir</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 13 May 2020 22:26:52 &#43;0800</lastBuildDate><atom:link href="https://www.leewei.co/posts/" rel="self" type="application/rss+xml" /><item>
    <title>CMU Databases Systems: 04 Database Storage(pt.2)</title>
    <link>https://www.leewei.co/posts/cmu-15-445/database-storage-02/</link>
    <pubDate>Wed, 13 May 2020 22:26:52 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/cmu-15-445/database-storage-02/</guid>
    <description><![CDATA[Andy(lecturer) said that in the early 2000s, Google is making tons of money. And one of the reason Google is expanding and scaling so fast is because they are using HBase, which is called &ldquo;BigTable&rdquo; on GCP. Google is absolutely good at large scale database systems, like Spanner, BigQuery etc. A lot of companies are trying to copy the tech stack of Google. Nevertheless, not all the companies that uses Google Cloud Platform are enterprise level companies, most of them don't have the resource like Google to develop applications using large scale databases.]]></description>
</item><item>
    <title>CMU Databases Systems: 03 Database Storage(pt.1)</title>
    <link>https://www.leewei.co/posts/cmu-15-445/database-storage-01/</link>
    <pubDate>Mon, 13 Apr 2020 20:26:07 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/cmu-15-445/database-storage-01/</guid>
    <description><![CDATA[Course Outline The main purpose of this course is How to build a software of database management system.
Storage  Volatile Devices: it needs power to keep its data persistent. Non-Volatile Devices: does not need continous power for device to retain its data.  Non-Volatile Memory: a storage device that is almost as fast as DRAM but with the persistence of a disk.
Disk-Oriented DBMS The data in the database files is organized into pages, and the first page is the directory page.]]></description>
</item><item>
    <title>PostgreSQL: Server setup on Ubuntu 18.04</title>
    <link>https://www.leewei.co/posts/2020/postgre-sql-set-up/</link>
    <pubDate>Fri, 03 Apr 2020 09:57:59 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2020/postgre-sql-set-up/</guid>
    <description><![CDATA[Install PostgreSQL Create a file /etc/apt/sources.list.d/pgdg.list and add the following line to that file deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main. We can get the PostgreSQL APT repository from the official website.
$ sudo sh -c &#39;echo &#34;deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main&#34; &gt;&gt; /etc/apt/sources.list.d/pgdg.list&#39; Import the repository public key
$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - Update the repository list and install PostgreSQL
$ sudo apt-get update $ sudo apt-get -y install postgresql Check if PostgreSQL is running as expected]]></description>
</item><item>
    <title>CMU Databases Systems: 02 Advanced SQL</title>
    <link>https://www.leewei.co/posts/cmu-15-445/advanced-sql/</link>
    <pubDate>Thu, 02 Apr 2020 19:51:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/cmu-15-445/advanced-sql/</guid>
    <description><![CDATA[Relational Languages User only needs to specify the data they want using declaritive language(e.g. SQL), not how to compute it. The DBMS is responsible for optimizing a query plan.
SQL History SQL's full name is Structured Query Language, IBM originally called it SEQUEL, but got sued by some people in the UK. So they ended up called it SQL.
 ANSI Standard in 1986 ISO in 1987  Most DBMSs at least supports SQL-92.]]></description>
</item><item>
    <title>CMU Databases Systems: 01 Relational Model</title>
    <link>https://www.leewei.co/posts/cmu-15-445/relational-model/</link>
    <pubDate>Thu, 02 Apr 2020 17:29:54 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/cmu-15-445/relational-model/</guid>
    <description><![CDATA[I got rejected by CMU last week. Not surprised by the result, because I prepared the application in a short amount of time. Also, I didn't do well on the online coding test. Although the outcome is quite depressing, I still managed to look on the bright side. &ldquo;There are numerous CMU online courses, why don't I just take these courses and do the assignments?&rdquo; Plus, thanks to the freaking Corona virus.]]></description>
</item><item>
    <title>MySQL/Mariadb Best Practice</title>
    <link>https://www.leewei.co/posts/2020/mysql-mariadb-best-practice/</link>
    <pubDate>Sat, 18 Jan 2020 14:37:02 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2020/mysql-mariadb-best-practice/</guid>
    <description><![CDATA[A note for the best practice of MySQL/MariaDB. (To be updated)
Datatype  Use CHAR datatype if the length of the data is fixed. Instead, use VARCHAR to store variable length data. It is slightly more faster to use CHAR over VARCHAR when the data length is fixed. Avoid using BLOB datatype. Store BLOB data might boost up the total size of the database. We can consifer storing these blob data into other servers, and we store the URL link to these blob.]]></description>
</item><item>
    <title>Startup Playbook: a startup framework</title>
    <link>https://www.leewei.co/posts/2019/start-up-playbook-the-idea/</link>
    <pubDate>Sun, 22 Dec 2019 12:48:19 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2019/start-up-playbook-the-idea/</guid>
    <description><![CDATA[I found an startup playbook that is created by Sam Altman, former president of Y Combinator. It's a great website if anyone wants to start their company in the future. Here is the summery of this playbook and some of my thoughts:
The Idea This is the most important part of starting a startup. A startup needs to focus on what it is solving and who needs this product. It's not like you can think of a idea overnight, I think sometimes a good idea came from stupid, shitty topic.]]></description>
</item><item>
    <title>Data Structures: Array &amp; Linked List</title>
    <link>https://www.leewei.co/posts/2019/ds-array-linked-list/</link>
    <pubDate>Wed, 11 Dec 2019 00:27:34 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2019/ds-array-linked-list/</guid>
    <description><![CDATA[Array Array is a data structure and it is a collection of elements or values. Each elment is identified by an array index/key.
 Advantages  It is very easy to implement. Random access is O(1) if we know the array index or key.   Disadvantages  It is not a dynamic data structure. It would take O(N) if we want to insert or remove an element in the array.]]></description>
</item><item>
    <title>Dependency Inversion Principle</title>
    <link>https://www.leewei.co/posts/2019/dependency-inversion-principle/</link>
    <pubDate>Wed, 11 Dec 2019 00:13:40 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2019/dependency-inversion-principle/</guid>
    <description><![CDATA[I accidently knew the concept of Dependency Inversion Principle(DIP) when I was developing a project. Its definition:
High level modules should not depend on low level modules; both should depend on abstractions. Abstractions should not depend on details. Details should depend on abstractions.
Confusing, right? The first time I heard of this principle, I thought it was about the organization of directories. ðŸ˜†
Example 1: without DIP Let's say we have an application that has the following structure:]]></description>
</item><item>
    <title>How to Avoid Asking Bad Questions</title>
    <link>https://www.leewei.co/posts/2019/how-to-avoid-asking-bad-questions/</link>
    <pubDate>Wed, 04 Dec 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.leewei.co/posts/2019/how-to-avoid-asking-bad-questions/</guid>
    <description><![CDATA[As a customer engineer, I receive all kinds of questions everyday. For me, I also ask a lot of questions to my colleagues. It is normal if we ask someone for help because we don't know everything. However, it might be frustrating to handle bad questions. Here are some tips on how we avoid asking bad questions:
1. Google it before asking anyone Sometimes the answer to the question is just one click away.]]></description>
</item></channel>
</rss>
