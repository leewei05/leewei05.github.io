<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Sir</title>
		<link>https://www.leewei.co/posts/</link>
		<description>Recent content in Posts on Sir</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Sat, 18 Jan 2020 14:37:02 +0800</lastBuildDate>
		<atom:link href="https://www.leewei.co/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>MySQL/Mariadb Best Practice</title>
			<link>https://www.leewei.co/posts/2020/mysql-mariadb-best-practice/</link>
			<pubDate>Sat, 18 Jan 2020 14:37:02 +0800</pubDate>
			
			<guid>https://www.leewei.co/posts/2020/mysql-mariadb-best-practice/</guid>
			<description>A note for the best practice of MySQL/MariaDB. (To be updated)
Datatype  Use CHAR datatype if the length of the data is fixed. Instead, use VARCHAR to store variable length data. It is slightly more faster to use CHAR over VARCHAR when the data length is fixed. Avoid using BLOB datatype. Store BLOB data might boost up the total size of the database. We can consifer storing these blob data into other servers, and we store the URL link to these blob.</description>
			<content type="html"><![CDATA[<p>A note for the best practice of MySQL/MariaDB. (To be updated)</p>
<h3 id="datatype">Datatype</h3>
<ol>
<li>Use <code>CHAR</code> datatype if the length of the data is fixed. Instead, use <code>VARCHAR</code> to store variable length data.
It is slightly more faster to use <code>CHAR</code> over <code>VARCHAR</code> when the data length is fixed.</li>
<li>Avoid using <code>BLOB</code> datatype. Store <code>BLOB</code> data might boost up the total size of the database. We can consifer storing these blob data into other servers, and we store the URL link to these blob.
GCP Cloud Storage, AWS S3 are suited for this kind of data.</li>
</ol>
<h3 id="table">Table</h3>
<ol>
<li>Backup the table before altering it.</li>
<li>Rather changing the table with real data, alter and test a duplicate table.</li>
</ol>
<h3 id="operation">Operation</h3>
<ol>
<li>
<p>Execute backup command in OS level, not from the mysql client. Make sure that both the users in MySQL and OS have the write permission.</p>
<pre><code>// Backup a specific table data to the '/tmp' directory in the OS
$ mysqldump --user='[USER]' -p \
[DATABASE_NAME] [TABLE_NAME] &gt; /tmp/test.sql

// Backup database
$ mysqldump --user='[USER]' -p \
[DATABASE_NAME] &gt; /tmp/test.sql
</code></pre></li>
<li>
<p>Restore database backup</p>
<pre><code>// Restore database
$ mysql --user='[USER]' -p \
[DATABASE_NAME] &lt; /tmp/test.sql
</code></pre></li>
</ol>
]]></content>
		</item>
		
		<item>
			<title>Startup Playbook: a startup framework</title>
			<link>https://www.leewei.co/posts/2019/start-up-playbook-the-idea/</link>
			<pubDate>Sun, 22 Dec 2019 12:48:19 +0800</pubDate>
			
			<guid>https://www.leewei.co/posts/2019/start-up-playbook-the-idea/</guid>
			<description>I found an startup playbook that is created by Sam Altman, former president of Y Combinator. It&#39;s a great website if anyone wants to start their company in the future. Here is the summery of this playbook and some of my thoughts:
The Idea This is the most important part of starting a startup. A startup needs to focus on what it is solving and who needs this product. It&#39;s not like you can think of a idea overnight, I think sometimes a good idea came from stupid, shitty topic.</description>
			<content type="html"><![CDATA[<p>I found an <a href="https://playbook.samaltman.com/">startup playbook</a> that is created by Sam Altman, former president of Y Combinator. It's a great website if anyone wants to start their company in the future.
Here is the summery of this playbook and some of my thoughts:</p>
<h3 id="the-idea">The Idea</h3>
<p>This is the most important part of starting a startup. A startup needs to focus on what it is solving and who needs this product. It's not like you can think of a idea overnight, I think sometimes a good idea came from stupid, shitty topic. For instance, I really like a comedy called &ldquo;Silicon Valley&rdquo;. The story focus on a group of people that are building, iterating a product and the shit things they confront. Richard, one of the protagonists figured out &ldquo;Middle Out Algorithm&rdquo; when the team are discussing how much time they will need to jerk off all of the people in TechCrunch.</p>
<p>Maybe I'll start with a simple idea that people need to solve. My colleague, which is a account manager, she switches messeging apps eveyday to communicate with different customers. An All-In-One messege app can help her work more efficiently. After some research, I found some desktop apps that have already been done by people. It's impossible to build an All-In-One mobile app because it means that Facebook, Line, Skype, WeChat need to release API for their messeging service.</p>
<p>The playbook recommended that don't try to create a startup if you don't have a good idea. From their experiences, all of the companies that start off with no ideas failed at the end. Here are the advices from the playbook:</p>
<ol>
<li>Learn about a lot of different things.</li>
<li>Practice noticing problems, things that seem inefficient, and major technological shifts.</li>
<li>Work on projects you find interesting.</li>
<li>Go out of your way to hang around smart, interesting people.</li>
</ol>
<h3 id="a-great-team">A Great Team</h3>
<p>I think there are two factors to build a great team. Firstly, the characteristics of the founder/co-founder. I think the ability to bound people together and passion are very important. The founder doesn't need to be the best coder or the smartest guy, but he/she needs to have the passion to keep things running. I would like to call it &ldquo;Passion Driven Development&rdquo;. üòè Founders need to precise, determined and passionate to keep employees work for this company. Secondly, the employees that hired by the founder. It is crucial to find people with passion and agree with our ideas. The company culture we want decides the people who we are looking for.</p>
<p>The book also mentioned that tech startups need to have one founder who can build the product, and one founder who is good at sales and socialing with others. This can be the same person. However, I think it is best to have two different people responsible for particular job. They also have the ability to handle the other person's job when the other cofounder is not available, a person who can backup another one.</p>
<p>Another challenge for founders is the decisiveness when firing a person. It is both very hard to find a great team member and fire a member that is not suited for the team. Founders will need some strict rules that whenever a person violates one of the rules, he/she will be fired. Maybe the employee isn't suitable for other team members, this might also be the time to just let them go. ‚ùÑ</p>
<h3 id="a-great-product">A Great Product</h3>
<p>The secret for having a great company is to have a great product. Yeah, we know. üòÇ In order to create a excellent product, we need to follow these concepts:</p>
<ol>
<li>Collect User's feedbacks</li>
</ol>
<p>How the users think about the product is the number one thing for every entrepreneur. From the TV show &ldquo;Silicon Valley&rdquo;, before they released their product, they invited a lot of people to use their compression platform. However, the people who satisfied are engineers. Monica, a CV who supports them, finds the platform hard to use. The team didn't realize that the platform is really hard for non-engineers to use.</p>
<p>A product cannot be successful if the end users don't want to use it. This playbook highly suggests that the founder or the team needs to be close to the users. Build a product that users will want to share with other people. Build a product that the team will actually use.</p>
<ol start="2">
<li>Iteration</li>
</ol>
<p>After collecting users&rsquo; feedbacks, we will need to quickly iterate the product. Release functions that the users really want.
The users might be willing to use it more often because the product is improving.</p>
<h3 id="great-execution">Great Execution</h3>
<p>Doing is always better than reading. Let's go!</p>
]]></content>
		</item>
		
		<item>
			<title>Data Structures: Array &amp; Linked List</title>
			<link>https://www.leewei.co/posts/2019/ds-array-linked-list/</link>
			<pubDate>Wed, 11 Dec 2019 00:27:34 +0800</pubDate>
			
			<guid>https://www.leewei.co/posts/2019/ds-array-linked-list/</guid>
			<description>Array Array is a data structure and it is a collection of elements or values. Each elment is identified by an array index/key.
 Advantages  It is very easy to implement. Random access is O(1) if we know the array index or key.   Disadvantages  It is not a dynamic data structure. It would take O(N) if we want to insert or remove an element in the array.</description>
			<content type="html"><![CDATA[<h3 id="array">Array</h3>
<p>Array is a data structure and it is a collection of elements or values.
Each elment is identified by an array index/key.</p>
<ul>
<li>Advantages
<ul>
<li>It is very easy to implement.</li>
<li>Random access is O(1) if we know the array index or key.</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>It is not a dynamic data structure.</li>
<li>It would take O(N) if we want to insert or remove an element in the array.</li>
<li>It is not able to store different types of data in the same array. (Not you, Python! üò†)</li>
</ul>
</li>
</ul>
<h3 id="linked-list">Linked List</h3>
<p>A linked list is composed of nodes and references/pointers pointing from one node to another node, the last node of a linked list is pointed to Null.</p>
<p>A node contains a data object and a reference:</p>
<ol>
<li>Data: this data object can be any data type.</li>
<li>Reference/Pointer: this reference is pointing to the next node and the last node of the linked list points to a Null.</li>
</ol>
<ul>
<li>Advantages
<ul>
<li>It is a dynamic data structure.</li>
<li>Can store different types of data in each node.</li>
<li>It is easier to add a new node in the linked list because we only need to update the pointer of the nodes besides the new node.</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>More memory usage because of references.</li>
<li>Cannot execute random access because linked list is sequential access.</li>
</ul>
</li>
</ul>
<p>It is also quite hard for linked list to execute reverse traverse. The solution is double linked list, which means that each node will now point to the previous and the next node. However, double linked list is not so memory friendly since we'll use more memory to store more preferences.</p>
<h3 id="array-vs-linked-list">Array vs Linked list</h3>
<ul>
<li>Search Operation
<ul>
<li>Array has a better performance in search operation if we know the index or the key of a specific item.</li>
<li>Linked list would need to iterate every item to find the exact item.</li>
</ul>
</li>
<li>Insert/Remove Operation
<ul>
<li>Array takes O(1) time for appending a item at the end of the array. An array takes O(N) to insert a new item from the start because we need to re-create an array, insert the new item and copy the rest of the data in the new array.</li>
<li>Linked list takes O(1) time for adding a new node at the beginning of the list. But it takes O(N) to insert a node at the end because we need to iterate to the last node, which is pointing to Null, then we can add a new node.</li>
</ul>
</li>
<li>Memory
<ul>
<li>Linked list uses O(N) more memory than Array because linked list needs to store preferences.</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Operation</th>
<th align="center">Linked list</th>
<th align="right">Array</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Search</td>
<td align="center">O(N)</td>
<td align="right">O(1)</td>
</tr>
<tr>
<td align="left">Insert/Remove at the start</td>
<td align="center">O(1)</td>
<td align="right">O(N)</td>
</tr>
<tr>
<td align="left">Insert/Remove at the end</td>
<td align="center">O(N)</td>
<td align="right">O(1)</td>
</tr>
<tr>
<td align="left">Memory Usage Comparison</td>
<td align="center">O(N)</td>
<td align="right">0</td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title>Dependency Inversion Principle</title>
			<link>https://www.leewei.co/posts/2019/dependency-inversion-principle/</link>
			<pubDate>Wed, 11 Dec 2019 00:13:40 +0800</pubDate>
			
			<guid>https://www.leewei.co/posts/2019/dependency-inversion-principle/</guid>
			<description>I accidently knew the concept of Dependency Inversion Principle(DIP) when I was developing a project. Its definition:
High level modules should not depend on low level modules; both should depend on abstractions. Abstractions should not depend on details. Details should depend on abstractions.
Confusing, right? The first time I heard of this principle, I thought it was about the organization of directories. üòÜ
Example 1: without DIP Let&#39;s say we have an application that has the following structure:</description>
			<content type="html"><![CDATA[<p>I accidently knew the concept of Dependency Inversion Principle(DIP) when I was developing a project.
Its definition:</p>
<p><strong><code>High level modules should not depend on low level modules; both should depend on abstractions. Abstractions should not depend on details. Details should depend on abstractions.</code></strong></p>
<p>Confusing, right? The first time I heard of this principle, I thought it was about the organization of directories. üòÜ</p>
<h3 id="example-1-without-dip">Example 1: without DIP</h3>
<p>Let's say we have an application that has the following structure:</p>
<p>User Interface -&gt; Bussiness Logic Layer -&gt; Data Access Layer -&gt; Database</p>
<p>A user wants to see the total account users in the database. He can do this by clicking a button to get the data.
The click event triggered Bussinees Logic Layer to create a new instance, then this instance retrieved these data from the data access layer.
After that Data Access Layer made a query from the database. As a result, the queried data will display on the web.</p>
<p>This application didn't seperate each layer, it is a tight-coupled architecture.
It is fine if we're developing a small project like this, but as the project grow, it'll get more difficult to maintain and debug.</p>
<h3 id="example-2-with-dip">Example 2: with DIP</h3>
<p>Here is sample project layout with DIP:</p>
<pre><code>| app(root directory of this project)
| &gt; interface.go
|-- main
|   &gt; main.go
|-- dao
|   &gt; dao.go
|   &gt; dao_test.go
|-- core
    &gt; core.go    
	&gt; core_test.go
    &gt; interface.go
</code></pre><p>We divide this application into three packages:</p>
<ol>
<li><code>main</code>: API enpoints and error handling.</li>
<li><code>dao(data access object)</code>: collections of methods that are operating database.</li>
<li><code>core</code>: manage bussiness logic of this application.</li>
</ol>
<h3 id="advantages-of-using-dip">Advantages of using DIP</h3>
<ol>
<li>Testing</li>
</ol>
<p>If we divide this application into little pieces, we can test these packages separately.
For instance, we can use something like <a href="https://github.com/golang/mock">mock</a> to help us test functions in dao.
In this way, we will be certain that our dao package is ready to use before using it in other packages.</p>
<ol start="2">
<li>Portable</li>
</ol>
<p>As our application grow, sometimes we need to find better solutions.
For example, we might use SQLite for our application because it is a POC project.
Later on, SQLite might not be able to handle large concurrent users.
So the team want to switch to PostgreSQL database for a better performace handling.</p>
<p><strong>Since business layer(core package) is depend on the abstraction(interface),
the team just needs to change some configurations in the dao package and doesn't have to change any code in the business layer!</strong></p>
<p><img src="../img/noice.gif" alt="Noice"></p>
<ol start="3">
<li>Maintainable</li>
</ol>
<p>It'll be much more easier to let members maintain large code base because we have divide each function into small packages.
New members will have a better understanding to the code repository and senior members can quickly review these functions after a long time.</p>
<h3 id="conclusion">Conclusion</h3>
<p>Dependency Inversion Principle is a good concept that all engineers should know about, but I'm not saying we should always follow this principle. We should always consider the size of the project and the total amount of people that work in this project. Small project for fun? Maybe stick with <a href="https://en.wikipedia.org/wiki/Monolithic_application.">Monolithic_application</a>.üòù</p>
]]></content>
		</item>
		
		<item>
			<title>How to Avoid Asking Bad Questions</title>
			<link>https://www.leewei.co/posts/2019/how-to-avoid-asking-bad-questions/</link>
			<pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://www.leewei.co/posts/2019/how-to-avoid-asking-bad-questions/</guid>
			<description>As a customer engineer, I receive all kinds of questions everyday. For me, I also ask a lot of questions to my colleagues. It is normal if we ask someone for help because we don&#39;t know everything. However, it might be frustrating to handle bad questions. Here are some tips on how we avoid asking bad questions:
1. Google it before asking anyone Sometimes the answer to the question is just one click away.</description>
			<content type="html"><![CDATA[<p>As a customer engineer, I receive all kinds of questions everyday.
For me, I also ask a lot of questions to my colleagues.
It is normal if we ask someone for help because we don't know everything.
However, it might be frustrating to handle bad questions.
Here are some tips on how we avoid asking bad questions:</p>
<h3 id="1-google-it-before-asking-anyone">1. Google it before asking anyone</h3>
<p>Sometimes the answer to the question is just one click away. People need to get used to search for answers by themselves. Why?
First, we will have a better understanding of this issue because we fix it by ourselves. We gain experience from this process and we can quickly resolve similar issue in the future. Secondly, it reduces communication cost between co-workers. Why bother asking other people for help if the answer is already there? :)</p>
<h3 id="2-dont-ask-the-same-question-over-and-over-again">2. Don't ask the same question over and over again</h3>
<p>It's okay to ask others for help, but keep in mind that don't ask the same question repeatedly.
After we got the information we needed, it is recommended to write it down, because we might forget the solution in the future.
It  will take our colleagues some time to explain the answer, we sure don't want to waste their time explaining the same question over and over again.</p>
<p>Personally, I recommend <a href="https://www.notion.so/">Notion</a>, it is a neat software to keep track of our TODOs and notes.
Notion supports markdown and emojis, and it also has a lot of default templates to use.</p>
<h3 id="3-describe-our-question-specifically">3. Describe our question specifically</h3>
<ul>
<li>Why is my website not working?</li>
<li>My Nginx server stop running since 3, Dec 2019 what time, here are some logs. Why isn't it not working?</li>
</ul>
<p>Which question do you think is better to let people understand?</p>
<p>From my experience, the following information are nice to have when we reach out for help.</p>
<ol>
<li>Some details to the question
<ul>
<li>This includes providing logs and the exact time of this issue</li>
</ul>
</li>
<li>Come up with solutions of solving it
<ul>
<li>This can help us practice thinking ways to solve the issue</li>
<li>Senior engineers can get a better understanding of the issue and provide more accurate advices.</li>
</ul>
</li>
<li>Clarify some operations that we've already done
<ul>
<li>For instance, we already tried to reboot the VM or restart the system</li>
</ul>
</li>
</ol>
<p>Here are some tips for asking a good questions from <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow</a>.</p>
<h3 id="conclusion">Conclusion</h3>
<p>There are answers that cannot be answered online. It's fine to ask our colleagues for answers, we don't know everything, especially for junior engineers.
Requesting help from senior engineers can save both of our time, why is that? Experienced engineers can give advices to junior engineers, we can avoid a lot of mistakes they've made before.
At the end, if we fucked up the code base or project, it's still senior engineers&rsquo; responsibility to clean up the mess. üòì</p>
]]></content>
		</item>
		
		<item>
			<title>Data Structures and Algorithms Introduction</title>
			<link>https://www.leewei.co/posts/2019/data-structures-algorithm-introduction/</link>
			<pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://www.leewei.co/posts/2019/data-structures-algorithm-introduction/</guid>
			<description>Finally got some time to do this. This is the first post of me learning data structures and algorithms online courses. I&#39;ll take down my notes and put it here to share with you guys. Let&#39;s begin!
Introduction Why is data structures and algorithms so important? Why does every student major in computer science related fields needs to take this course?
The answer is because we need to practice Leetcode questions and pass interviews to get a job.</description>
			<content type="html"><![CDATA[<p>Finally got some time to do this.
This is the first post of me learning data structures and algorithms online courses.
I'll take down my notes and put it here to share with you guys. Let's begin!</p>
<h2 id="introduction">Introduction</h2>
<p>Why is data structures and algorithms so important?
Why does every student major in computer science related fields needs to take this course?</p>
<p><del>The answer is because we need to practice Leetcode questions and pass interviews to get a job.</del></p>
<p>Sadly, yes but also no. That is not the main purpose why developers should learn data structures
and algorithms. The simplest answer is to let our code run faster. üòÑ</p>
<h2 id="benefits-of-learning-data-structures-and-algorithms">Benefits of learning Data structures and Algorithms</h2>
<p>Assume that we all want our code to run faster. We can do that by avoiding nested loops and making quicker calculations.
However, sometimes the bottleneck is not the alogrithm we use, it's the data structure we use.
In other words, algorithm will boost up by choosing a proper data structure.</p>
<p>For instance, Dijkstra's algorithm(Shortest Path First algorithm) is
an algorithm for finding the shortest path between two nodes.</p>
<p>Without a proper data structure, the running time will be O(N^2), N stands for the total number of nodes. If we use a priority queue approach, we can minimize time complexity to O(N*LogN). Noice!</p>
<p><img src="../img/wisely.jpg" alt=""></p>
<h2 id="data-structures-and-abstract-data-type">Data structures and Abstract data type</h2>
<p>After knowing the importance of data structures, let's dive into some basic concept of data structures and abstract data type.
Let's talk about abstract data type(ADT) first.</p>
<h3 id="abstract-data-type">Abstract data type</h3>
<p><a href="https://en.wikipedia.org/wiki/Abstract_data_type">Abstract data type</a> is a logical description of a certain data type.
ADT implies the basic behaviors of a data structure, it does not specify concrete implementation.</p>
<p>I know. It's confusing. üòì</p>
<p>For example, <a href="https://en.wikipedia.org/wiki/Stack_(abstract_data_type)">Stack</a> is an abstract data type which is a last-in-first-out structure and it can be defined by three methods. <code>Push</code> inserts a data item into the stack, <code>Pop</code> removes a data item from it and <code>Peek(or top)</code> can return the data item on top of the stack without removing it.</p>
<p>So basically, abstract data type defines behaviors from the view of a user. A user can execute push, pop or peek method in a stack data type.</p>
<h3 id="data-structures">Data structures</h3>
<p><a href="https://en.wikipedia.org/wiki/Data_structure">Data structures</a> is the concrete implementation and the physical form of a certain data type. Data structure is aim to make access and modification more efficiently.</p>
<p>For example, <a href="https://en.wikipedia.org/wiki/Array_data_structure">Array</a> is a data structure which is a collection of many elements.
Time complexity of indexing a data item in an array is O(1).</p>
<p>Data structure is the actual implementation of a data type and is from the view of a implementer.</p>
<h2 id="conclusion">Conclusion</h2>
<p>In conclusion, we can know that abstract data type and data structures are not independent from each other.
An abstract data type is like a specification and every abstract data type has an underlying data structure that is going to implement
the behaviors that are defined by the abstract data type.</p>
]]></content>
		</item>
		
	</channel>
</rss>
